library(grid)
plotLabyrinth <- function(lab)
{
	sel <- lab[,] == -1
	lab[sel] <- rgb(0, 0, 0)		
	
	sel <- lab[,] == 0
	lab[sel] <- rgb(1, 1, 1)

	sel <- lab[,] == -2
	lab[sel] <- rgb(1, 0, 0)

	sel <- lab[,] == -3
	lab[sel] <- rgb(1, 1, 0)
	
	sel <- lab[,] == -4
	lab[sel] <- rgb(0, 0, 1)

	sel <- lab[,] == 1
	lab[sel] <- rgb(0.3, 0.3, 0.3)

	sel <- lab[,] == 2
	lab[sel] <- rgb(0.4, 0.4, 0.4)

	sel <- lab[,] == 3
	lab[sel] <- rgb(0.6, 0.6, 0.6)

	sel <- lab[,] == 4
	lab[sel] <- rgb(0.8, 0.8, 0.8)

	grid.newpage()
	grid.raster(lab, interpolate=F)
}


matrikaSosedov <- function(data,currentPosition,Srow,Scol,Skm){
	Sys.sleep(0.1)
	for(i in 1:nrow(currentPosition)){
		data[currentPosition[i,1],currentPosition[i,2]]=-4	

		dol=data[currentPosition[i,1]+1,currentPosition[i,2]]
		desno=data[currentPosition[i,1],currentPosition[i,2]+1]
		gor=data[currentPosition[i,1]-1,currentPosition[i,2]]
		levo=data[currentPosition[i,1],currentPosition[i,2]-1]
			
		pathFound=FALSE
		if (dol == -3) return(TRUE)
		if (!pathFound && dol > 0){
			data[currentPosition[i,1]+1,currentPosition[i,2]] = -2
			screen <- plotLabyrinth(data)
		}
		if (desno == -3) return(TRUE)
		if (!pathFound && desno > 0){
			data[currentPosition[i,1],currentPosition[i,2]+1] = -2
			screen <- plotLabyrinth(data)
		}
		if (gor == -3) return(TRUE)
		if (!pathFound && gor > 0){
			data[currentPosition[i,1]-1,currentPosition[i,2]] = -2
			screen <- plotLabyrinth(data)
		}
		if (levo == -3) return(TRUE)
		if (!pathFound && levo > 0){
			data[currentPosition[i,1],currentPosition[i,2]-1] = -2
			screen <- plotLabyrinth(data)
		}
	}
	if (!pathFound)
		return(data)
	return(pathFound)
}

Azvezda<- function(data){
	return(matrikaSosedov(data,which(data == -2, TRUE),c(),c(),0))
}

data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
screen <- plotLabyrinth(data)

matrikaSosedov(data)

