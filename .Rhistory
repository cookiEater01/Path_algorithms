library(grid)
plotLabyrinth <- function(lab)
{
sel <- lab[,] == -1
lab[sel] <- rgb(0, 0, 0)
sel <- lab[,] == 0
lab[sel] <- rgb(1, 1, 1)
sel <- lab[,] == -2
lab[sel] <- rgb(1, 0, 0)
sel <- lab[,] == -3
lab[sel] <- rgb(1, 1, 0)
sel <- lab[,] == 1
lab[sel] <- rgb(0.3, 0.3, 0.3)
sel <- lab[,] == 2
lab[sel] <- rgb(0.4, 0.4, 0.4)
sel <- lab[,] == 3
lab[sel] <- rgb(0.6, 0.6, 0.6)
sel <- lab[,] == 4
lab[sel] <- rgb(0.8, 0.8, 0.8)
grid.newpage()
grid.raster(lab, interpolate=F)
}
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
graph
source("dfs.R")
depth.first(graph, "s", c("g","k","l"))
which(data == -2, TRUE)
source("dfs.R")
source("izris.R")
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
#data
screen <- plotLabyrinth(data)
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
#graph
screen1 <- plotLabyrinth(graph)
depth.first(graph, "s", c("g","k","l"))
which(data == -2, TRUE)
data
data <- as.matrix(data)
colnames(data) <- paste("p", 1:ncol(data), sep="")
data
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
#colnames(data) <- paste("p", 1:ncol(data), sep="")
#rownames(data) <- paste("p", 1:nrow(data), sep="")
rename(data)
source("modityM.R")
source("modifyM.R")
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
#colnames(data) <- paste("p", 1:ncol(data), sep="")
#rownames(data) <- paste("p", 1:nrow(data), sep="")
rename(data)
data
source("modifyM.R")
#colnames(data) <- paste("p", 1:ncol(data), sep="")
#rownames(data) <- paste("p", 1:nrow(data), sep="")
data <- rename(data)
data
source("modifyM.R")
start <- startPosition(data)
start
source("modifyM.R")
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
start <- startPosition(data)
start
source("modifyM.R")
start <- startPosition(data)
start
source("modifyM.R")
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
start <- startPosition(data)
start
source("modifyM.R")
start <- startPosition(data)
start
source("modifyM.R")
start <- startPosition(data)
start
finish <- finishPosition(data)
finish
data <- read.table("labyrinth_2.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
screen <- plotLabyrinth(data)
start <- startPosition(data)
start
finish <- finishPosition(data)
finish
View(start)
depth.first(data, start, finish)
depth.first(data, start, finish)
startNode <- which(vNames %in% startNode)
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
source("dfs.R")
source("izris.R")
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
#graph
screen1 <- plotLabyrinth(graph)
depth.first(graph, "s", c("g","k","l"))
depth.first(graph, "s", c("g","k","l"))
source("dfs.R")
source("izris.R")
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
depth.first(graph, "s", c("g","k","l"))
source("dfs.R")
source("izris.R")
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
depth.first(graph, "s", c("g","k","l"))
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
start <- startPosition(data)
start
finish <- finishPosition(data)
finish
screen <- plotLabyrinth(data)
depth.first(data, start, finish)
startNode <- which(vNames %in% startNode)
startNode <- which(vNames %in% startNode)
startNode <- which(vNames %in% startNode)
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
source("dfs.R")
depth.first(graph, "s", c("g","k","l"))
debugSource('~/GitHub/Path_algorithms/test.R')
graph <- matrix(c(NA, 1, 1, 1,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA, 1, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA, 1, 1, 1,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1, 1,NA,
NA,NA,NA,NA,NA, 1,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA, 1,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA), byrow=TRUE, ncol=13, nrow=13)
colnames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
rownames(graph) <- c("s","a","b","c","d","e","f","g","h","i","j","k","l")
depth.firt <- function(graph, startNode, endNodes)
{
if (is.null(rownames(graph)))
vNames <- 1:nrow(graph)
else
vNames <- rownames(graph)
startNode <- which(vNames %in% startNode)
endNodes <- which(vNames %in% endNodes)
stack <- vector()
marked <- rep(FALSE, len = nrow(graph))
from <- rep(-1, len = nrow(graph))
marked[startNode] <- TRUE
stack <- c(stack, startNode)
print(paste("Polagam na sklad vozlisce", vNames[startNode]))
while (length(stack) > 0)
{
curNode <- stack[length(stack)]
if (curNode %in% endNodes)
{
print(paste("Resitev DFS v vozliscu", vNames[curNode]))
path <- vNames[curNode]
while (TRUE)
{
curNode <- from[curNode]
if (curNode != -1)
path <- paste(path, "<--", vNames[curNode])
else
return(path)
}
}
sel <- which(!is.na(graph[curNode,]) & !marked)
if (any(sel))
{
nextNode <- sel[1]
marked[nextNode] <- TRUE
from[nextNode] <- curNode
stack <- c(stack, nextNode)
print(paste("Polagam na sklad vozlisce", vNames[nextNode]))
}
else
{
stack <- stack[-length(stack)]
print(paste("Odstranjujem s sklada vozlisce", vNames[curNode]))
}
}
}
depth.firt(graph, "s", c("g","k","l"))
depth.firt(graph, "s", c("g","k","l"))
depth.firt(graph, "s", c("g","k","l"))
depth.firt(graph, "s", c("g","k","l"))
debugSource('~/GitHub/Path_algorithms/test.R')
source("dfs.R")
source("izris.R")
source("modifyM.R")
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
start <- startPosition(data)
start
finish <- finishPosition(data)
finish
screen <- plotLabyrinth(data)
depth.first(data, start, finish)
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
depth.first(data, -2, -3)
depth.first(data, -2, -3)
startNode <- which(vNames %in% startNode)
endNodes <- which(vNames %in% endNodes)
which(vNames %in% "s")
vNames <- rownames(graph)
which(vNames %in% "s")
a <- which(vNames %in% "s")
debugSource('~/GitHub/Path_algorithms/test.R')
a
data <- read.table("labyrinth_1.txt", sep=",", header=F)
data <- as.matrix(data)
data <- rename(data)
data
data[2][2]
data[2]
data[1]
data[2,2]
start <- startPosition(data)
start
finish <- finishPosition(data)
finish
screen <- plotLabyrinth(data)
data[start]
data[finish]
source("modifyM.R")
matrikaSosedov(data)
source("modifyM.R")
matrikaSosedov(data)
source("modifyM.R")
matrikaSosedov(data)
source("modifyM.R")
matrikaSosedov(data)
source("modifyM.R")
matrikaSosedov(data)
source("modifyM.R")
matrikaSosedov(data)
data[1,0] > 0
data[3,2] > 0
data[3,2]
data[2,2]
data[2,3]
data[2,3] > 0
data[2,-1] > 0
data[2,0] > 0
b = data[2,0] > 0
b == TRUE
b == F
t=data[2,3] > 0
t
t ==T
if (b) {}
if (b) {print("haha")}
debugSource('~/GitHub/Path_algorithms/test.R')
vel = nrow(data) * ncol(data)
ms <- matrix(data=NA, nrow=vel, ncol=vel)
ms
nrow(data)
